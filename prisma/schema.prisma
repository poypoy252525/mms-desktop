// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  googleId   String      @unique
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt
  email      String      @unique
  firstName  String
  lastName   String
  photo      String
  pushTokens PushToken[]
}

model PushToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
}

model Deceased {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ownerId   String   @db.ObjectId
  owner     Owner    @relation(fields: [ownerId], references: [id])
  status    Status   @default(ACTIVE)
  burial    Burial   @relation(fields: [burialId], references: [id])
  burialId  String   @db.ObjectId
}

enum Status {
  ACTIVE
  INACTIVE
}

model Owner {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  burial   Burial[]
  deceased Deceased[]
}

model Burial {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  block       String
  row         String
  coordinates Float[]
  isVacant    Boolean    @default(true)
  deceased    Deceased[]
  type        BurialType
  ownerId     String     @unique @db.ObjectId
  owner       Owner      @relation(fields: [ownerId], references: [id])
}

enum BurialType {
  FAMILY_LOT
  LAWN_LOT
  APARTMENT
  COLUMBARIUM
}
